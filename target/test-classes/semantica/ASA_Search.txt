module
  KEYWORD.module
  IDENTIFIER.search
  KEYWORD.private
  block
    definitionPart
      definition
        constantDef
          KEYWORD.const
          constantName
            IDENTIFIER.size
          SYMBOL.=
          constant
            expression
              relationalExpression
                simpleExpression
                  term
                    factor
                      NUMBER.10
      SYMBOL.;
      definition
        typeDef
          KEYWORD.typedef
          type
            typeSymbol
              KEYWORD.integer
            rangeType
              KEYWORD.range
              SYMBOL.[
              constant
                expression
                  relationalExpression
                    simpleExpression
                      term
                        factor
                          NUMBER.1
              KEYWORD.to
              constant
                expression
                  relationalExpression
                    simpleExpression
                      term
                        factor
                          variableAccess
                            IDENTIFIER.size
              SYMBOL.]
          IDENTIFIER.sizer
      SYMBOL.;
      definition
        typeDef
          KEYWORD.typedef
          type
            typeSymbol
              KEYWORD.integer
            arrayType
              KEYWORD.array
              SYMBOL.[
              IDENTIFIER.sizer
              SYMBOL.]
          IDENTIFIER.elements
      SYMBOL.;
      definition
        variableDef
          type
            typeSymbol
              IDENTIFIER.sizer
          variableList
            IDENTIFIER.j
      SYMBOL.;
      definition
        variableDef
          type
            typeSymbol
              IDENTIFIER.elements
          variableList
            IDENTIFIER.A
      SYMBOL.;
      definition
        variableDef
          type
            typeSymbol
              KEYWORD.integer
          variableList
            IDENTIFIER.x
      SYMBOL.;
      definition
        variableDef
          type
            tupleType
              SYMBOL.[
              typeSymbol
                KEYWORD.Boolean
              SYMBOL.,
              typeSymbol
                KEYWORD.integer
              SYMBOL.]
          variableList
            IDENTIFIER.result
      SYMBOL.;
      definition
        procedureDef
          procedureDecl
            KEYWORD.proc
            IDENTIFIER.search
            paramPart
              SYMBOL.(
              paramDef
                KEYWORD.val
                variableDef
                  type
                    typeSymbol
                      KEYWORD.integer
                  variableList
                    IDENTIFIER.target
              SYMBOL.;
              paramDef
                KEYWORD.val
                variableDef
                  type
                    typeSymbol
                      IDENTIFIER.elements
                  variableList
                    IDENTIFIER.B
              SYMBOL.;
              paramDef
                KEYWORD.ref
                variableDef
                  type
                    tupleType
                      SYMBOL.[
                      typeSymbol
                        KEYWORD.Boolean
                      SYMBOL.,
                      typeSymbol
                        KEYWORD.integer
                      SYMBOL.]
                  variableList
                    IDENTIFIER.result
              SYMBOL.)
          block
            definitionPart
              definition
                variableDef
                  type
                    typeSymbol
                      KEYWORD.integer
                  variableList
                    IDENTIFIER.m
              SYMBOL.;
              definition
                variableDef
                  type
                    typeSymbol
                      KEYWORD.integer
                  variableList
                    IDENTIFIER.i
              SYMBOL.;
              definition
                variableDef
                  type
                    typeSymbol
                      KEYWORD.Boolean
                  variableList
                    IDENTIFIER.found
              SYMBOL.;
              definition
                variableDef
                  type
                    typeSymbol
                      KEYWORD.integer
                  variableList
                    IDENTIFIER.where
              SYMBOL.;
            KEYWORD.begin
            statementPart
              statement
                assignStatement
                  variableAccessList
                    variableAccess
                      IDENTIFIER.i
                  SYMBOL.:=
                  expressionList
                    expression
                      relationalExpression
                        simpleExpression
                          term
                            factor
                              NUMBER.1
              SYMBOL.;
              statement
                assignStatement
                  variableAccessList
                    variableAccess
                      IDENTIFIER.m
                  SYMBOL.:=
                  expressionList
                    expression
                      relationalExpression
                        simpleExpression
                          term
                            factor
                              variableAccess
                                IDENTIFIER.size
              SYMBOL.;
              statement
                assignStatement
                  variableAccessList
                    variableAccess
                      IDENTIFIER.found
                  SYMBOL.:=
                  expressionList
                    expression
                      relationalExpression
                        simpleExpression
                          term
                            factor
                              booleanConstant
                                KEYWORD.false
              SYMBOL.;
              statement
                doStatement
                  KEYWORD.do
                  guardedCommandList
                    guardedCommand
                      expression
                        relationalExpression
                          simpleExpression
                            term
                              factor
                                variableAccess
                                  IDENTIFIER.i
                          relationalOperator
                            SYMBOL.<=
                          simpleExpression
                            term
                              factor
                                variableAccess
                                  IDENTIFIER.m
                      SYMBOL.->
                      statementPart
                        statement
                          ifStatement
                            KEYWORD.if
                            guardedCommandList
                              guardedCommand
                                expression
                                  relationalExpression
                                    simpleExpression
                                      term
                                        factor
                                          variableAccess
                                            IDENTIFIER.B
                                    relationalOperator
                                      SYMBOL.=
                                    simpleExpression
                                      term
                                        factor
                                          variableAccess
                                            IDENTIFIER.target
                                SYMBOL.->
                                statementPart
                                  statement
                                    assignStatement
                                      variableAccessList
                                        variableAccess
                                          IDENTIFIER.found
                                      SYMBOL.:=
                                      expressionList
                                        expression
                                          relationalExpression
                                            simpleExpression
                                              term
                                                factor
                                                  booleanConstant
                                                    KEYWORD.true
                                  SYMBOL.;
                                  statement
                                    assignStatement
                                      variableAccessList
                                        variableAccess
                                          IDENTIFIER.where
                                      SYMBOL.:=
                                      expressionList
                                        expression
                                          relationalExpression
                                            simpleExpression
                                              term
                                                factor
                                                  variableAccess
                                                    IDENTIFIER.i
                                  SYMBOL.;
                                  statement
                                    assignStatement
                                      variableAccessList
                                        variableAccess
                                          IDENTIFIER.i
                                      SYMBOL.:=
                                      expressionList
                                        expression
                                          relationalExpression
                                            simpleExpression
                                              term
                                                factor
                                                  variableAccess
                                                    IDENTIFIER.m
                                              addingOperator
                                                SYMBOL.+
                                              term
                                                factor
                                                  NUMBER.1
                                  SYMBOL.;
                              SYMBOL.[]
                              guardedCommand
                                expression
                                  relationalExpression
                                    simpleExpression
                                      term
                                        factor
                                          variableAccess
                                            IDENTIFIER.B
                                    relationalOperator
                                      SYMBOL.#
                                    simpleExpression
                                      term
                                        factor
                                          variableAccess
                                            IDENTIFIER.target
                                SYMBOL.->
                                statementPart
                                  statement
                                    assignStatement
                                      variableAccessList
                                        variableAccess
                                          IDENTIFIER.i
                                      SYMBOL.:=
                                      expressionList
                                        expression
                                          relationalExpression
                                            simpleExpression
                                              term
                                                factor
                                                  variableAccess
                                                    IDENTIFIER.i
                                              addingOperator
                                                SYMBOL.+
                                              term
                                                factor
                                                  NUMBER.1
                                  SYMBOL.;
                            KEYWORD.fi
                        SYMBOL.;
                  KEYWORD.od
              SYMBOL.;
              statement
                assignStatement
                  variableAccessList
                    variableAccess
                      IDENTIFIER.result
                  SYMBOL.:=
                  expressionList
                    expression
                      relationalExpression
                        simpleExpression
                          term
                            factor
                              SYMBOL.[
                              expressionList
                                expression
                                  relationalExpression
                                    simpleExpression
                                      term
                                        factor
                                          variableAccess
                                            IDENTIFIER.found
                                SYMBOL.,
                                expression
                                  relationalExpression
                                    simpleExpression
                                      term
                                        factor
                                          variableAccess
                                            IDENTIFIER.where
                              SYMBOL.]
              SYMBOL.;
            KEYWORD.end
      SYMBOL.;
    KEYWORD.begin
    statementPart
      statement
        forStatement
          KEYWORD.forall
          variableAccess
            IDENTIFIER.j
          SYMBOL.->
          statementPart
            statement
              readStatement
                KEYWORD.read
                variableAccessList
                  variableAccess
                    IDENTIFIER.A
            SYMBOL.;
          KEYWORD.llarof
      SYMBOL.;
      statement
        readStatement
          KEYWORD.read
          variableAccessList
            variableAccess
              IDENTIFIER.x
      SYMBOL.;
      statement
        doStatement
          KEYWORD.do
          guardedCommandList
            guardedCommand
              expression
                relationalExpression
                  simpleExpression
                    term
                      factor
                        variableAccess
                          IDENTIFIER.x
                  relationalOperator
                    SYMBOL.#
                  simpleExpression
                    term
                      factor
                        NUMBER.0
              SYMBOL.->
              statementPart
                statement
                  callStatement
                    IDENTIFIER.search
                    argumentList
                      SYMBOL.(
                      expressionList
                        expression
                          relationalExpression
                            simpleExpression
                              term
                                factor
                                  variableAccess
                                    IDENTIFIER.x
                        SYMBOL.,
                        expression
                          relationalExpression
                            simpleExpression
                              term
                                factor
                                  variableAccess
                                    IDENTIFIER.A
                        SYMBOL.,
                        expression
                          relationalExpression
                            simpleExpression
                              term
                                factor
                                  variableAccess
                                    IDENTIFIER.result
                      SYMBOL.)
                SYMBOL.;
                statement
                  ifStatement
                    KEYWORD.if
                    guardedCommandList
                      guardedCommand
                        expression
                          relationalExpression
                            simpleExpression
                              term
                                factor
                                  variableAccess
                                    IDENTIFIER.result
                        SYMBOL.->
                        statementPart
                          statement
                            writeStatement
                              KEYWORD.write
                              writeItem
                                expression
                                  relationalExpression
                                    simpleExpression
                                      term
                                        factor
                                          variableAccess
                                            IDENTIFIER.x
                              SYMBOL.,
                              writeItem
                                LITERAL.' can be found at '
                              SYMBOL.,
                              writeItem
                                expression
                                  relationalExpression
                                    simpleExpression
                                      term
                                        factor
                                          variableAccess
                                            IDENTIFIER.result
                          SYMBOL.;
                      SYMBOL.[]
                      guardedCommand
                        expression
                          relationalExpression
                            simpleExpression
                              term
                                factor
                                  SYMBOL.~
                                  factor
                                    variableAccess
                                      IDENTIFIER.result
                        SYMBOL.->
                        statementPart
                          statement
                            writeStatement
                              KEYWORD.write
                              writeItem
                                expression
                                  relationalExpression
                                    simpleExpression
                                      term
                                        factor
                                          variableAccess
                                            IDENTIFIER.x
                              SYMBOL.,
                              writeItem
                                LITERAL.' not found'
                          SYMBOL.;
                    KEYWORD.fi
                SYMBOL.;
                statement
                  readStatement
                    KEYWORD.read
                    variableAccessList
                      variableAccess
                        IDENTIFIER.x
                SYMBOL.;
          KEYWORD.od
      SYMBOL.;
    KEYWORD.end
  SYMBOL..
